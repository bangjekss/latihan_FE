[{"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\index.js":"1","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\reportWebVitals.js":"2","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\App.jsx":"3","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\index.js":"4","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\Navbar.jsx":"5","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\index.js":"6","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\RegisterPage.jsx":"7","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\index.js":"8","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\userReducer.js":"9","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\index.js":"10","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\userAction.js":"11","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\favordb\\api_url.js":"12","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\ProductPage.jsx":"13","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\LoginPage.jsx":"14","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ProductCard.jsx":"15","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\productAction.js":"16","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\productReducer.js":"17","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\spritedb\\index.js":"18","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ModalProduct.jsx":"19","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\cartAction.js":"20","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\cartReducer.js":"21","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\BadgeShoppingCart.jsx":"22","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\CartPage.jsx":"23","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\HistoryTransactionPage.jsx":"24","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\historyAction.js":"25","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\historyReducer.js":"26","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ModalHistory.jsx":"27","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\ManageProductPage.jsx":"28"},{"size":886,"mtime":1610448912918,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1473,"mtime":1610682830656,"results":"32","hashOfConfig":"30"},{"size":338,"mtime":1610651997067,"results":"33","hashOfConfig":"30"},{"size":6242,"mtime":1611133502278,"results":"34","hashOfConfig":"30"},{"size":403,"mtime":1610682668866,"results":"35","hashOfConfig":"30"},{"size":6245,"mtime":1610526714006,"results":"36","hashOfConfig":"30"},{"size":349,"mtime":1610650448224,"results":"37","hashOfConfig":"30"},{"size":441,"mtime":1611134181177,"results":"38","hashOfConfig":"30"},{"size":130,"mtime":1610649907702,"results":"39","hashOfConfig":"30"},{"size":672,"mtime":1610619652935,"results":"40","hashOfConfig":"30"},{"size":49,"mtime":1611133199233,"results":"41","hashOfConfig":"30"},{"size":1618,"mtime":1610619128766,"results":"42","hashOfConfig":"30"},{"size":3717,"mtime":1610619760274,"results":"43","hashOfConfig":"30"},{"size":1665,"mtime":1610600926085,"results":"44","hashOfConfig":"30"},{"size":2480,"mtime":1611196636173,"results":"45","hashOfConfig":"30"},{"size":542,"mtime":1610592768081,"results":"46","hashOfConfig":"30"},{"size":171,"mtime":1610650643613,"results":"47","hashOfConfig":"30"},{"size":5686,"mtime":1610651515513,"results":"48","hashOfConfig":"30"},{"size":3662,"mtime":1610654802804,"results":"49","hashOfConfig":"30"},{"size":336,"mtime":1610639919243,"results":"50","hashOfConfig":"30"},{"size":726,"mtime":1610624293320,"results":"51","hashOfConfig":"30"},{"size":3876,"mtime":1610654792012,"results":"52","hashOfConfig":"30"},{"size":1398,"mtime":1610652335252,"results":"53","hashOfConfig":"30"},{"size":766,"mtime":1610649603223,"results":"54","hashOfConfig":"30"},{"size":311,"mtime":1610649900191,"results":"55","hashOfConfig":"30"},{"size":2715,"mtime":1610654523916,"results":"56","hashOfConfig":"30"},{"size":7675,"mtime":1611196823426,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"i3ewiy",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\index.js",[],["122","123"],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\reportWebVitals.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\App.jsx",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\index.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\Navbar.jsx",["124","125","126"],"import React, { useState, Component } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Button,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logoutAction, getCartByUserIdAction } from '../redux/action';\r\nimport { avaIcon, logoYuchase, shoppingCartLogo } from '../spritedb';\r\nimport { BadgeShoppingCartComp } from './';\r\n\r\n// const Navbarccc = (props) => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const toggle = () => setIsOpen(!isOpen);\r\n\r\n//   return (\r\n//     <div>\r\n//       <Navbar\r\n//         color=\"light\"\r\n//         light\r\n//         expand=\"md\"\r\n//         style={{ boxShadow: '0px 1px 15px 1px rgba(0,0,0,0.3)' }}\r\n//       >\r\n//         <NavbarBrand href=\"/\">reactstrap</NavbarBrand>\r\n//         <NavbarToggler onClick={toggle} />\r\n//         <Collapse isOpen={isOpen} navbar>\r\n//           <Nav className=\"mr-auto\" navbar>\r\n//             <NavItem>\r\n//               <NavLink>\r\n//                 <Link to=\"/product\">\r\n//                   <NavbarText>ALL PRODUCT</NavbarText>\r\n//                 </Link>\r\n//               </NavLink>\r\n//             </NavItem>\r\n//             {/* <NavItem>\r\n//               <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n//             </NavItem>\r\n//             <UncontrolledDropdown nav inNavbar>\r\n//               <DropdownToggle nav caret>\r\n//                 Options\r\n//               </DropdownToggle>\r\n//               <DropdownMenu right>\r\n//                 <DropdownItem>Option 1</DropdownItem>\r\n//                 <DropdownItem>Option 2</DropdownItem>\r\n//                 <DropdownItem divider />\r\n//                 <DropdownItem>Reset</DropdownItem>\r\n//               </DropdownMenu>\r\n//             </UncontrolledDropdown> */}\r\n//           </Nav>\r\n//           <Nav>\r\n//             <NavItem>\r\n//               <Link to=\"/login\">\r\n//                 <Button color=\"warning\">Login</Button>\r\n//               </Link>\r\n//             </NavItem>\r\n//             <NavItem>\r\n//               <Link to=\"/register\">\r\n//                 <Button color=\"warning\">Register</Button>\r\n//               </Link>\r\n//             </NavItem>\r\n//             <NavItem>\r\n//               <Button color=\"danger\">Logout</Button>\r\n//             </NavItem>\r\n//           </Nav>\r\n//         </Collapse>\r\n//       </Navbar>\r\n//     </div>\r\n//   );\r\n// };\r\n// const useStyles = makeStyles();\r\n\r\nclass NavbarComp extends Component {\r\n  state = {\r\n    isOpen: false,\r\n  };\r\n  // componentDidMount() {\r\n  //   const { rxUserID } = this.props;\r\n  //   const { getCartByUserIdAction } = this.props;\r\n  //   getCartByUserIdAction(rxUserID);\r\n  // }\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if\r\n  // }\r\n  toggle = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  handleLogoutBtn = () => {\r\n    return this.props.logoutAction();\r\n  };\r\n  render() {\r\n    const classes = this.state.useStyles;\r\n    const { rxUserID, rxCartLength, rxUsername } = this.props;\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          className=\"px-5\"\r\n          color=\"light\"\r\n          light\r\n          expand=\"md\"\r\n          style={{ boxShadow: '0px 1px 15px 1px rgba(0,0,0,0.3)' }}\r\n        >\r\n          <NavbarBrand href=\"/\">\r\n            <Link to=\"/product\">\r\n              <img src={logoYuchase} alt=\"err_file\" style={{ width: '70px', height: '60px' }} />\r\n            </Link>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link to=\"/product\">\r\n                    <NavbarText>\r\n                      <b>ALL PRODUCT</b>\r\n                    </NavbarText>\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n            {/* ternery */}\r\n            {rxUserID ? (\r\n              <Nav className=\"align-items-center\" navbar>\r\n                <NavItem className=\"mr-4\">\r\n                  <Link to=\"/cart\">\r\n                    <BadgeShoppingCartComp cartLength={rxCartLength} />\r\n                  </Link>\r\n                </NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    <img src={avaIcon} alt=\"err_file\" style={{ width: '40px', height: '40px' }} />\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    <DropdownItem>Hi, {rxUsername}</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>Setting</DropdownItem>\r\n                    <DropdownItem>\r\n                      <Link to=\"/history\">Transactions History</Link>\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                      <Link to=\"/manage-product\">Manage Product</Link>\r\n                    </DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>\r\n                      <div onClick={this.handleLogoutBtn}>Logout</div>\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </Nav>\r\n            ) : (\r\n              <Nav>\r\n                <NavItem>\r\n                  <Link to=\"/login\">\r\n                    <Button color=\"warning\">Login</Button>\r\n                  </Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/register\">\r\n                    <Button color=\"warning\">Register</Button>\r\n                  </Link>\r\n                </NavItem>\r\n              </Nav>\r\n            )}\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ userReducer, cartReducer }) => {\r\n  return {\r\n    rxUserID: userReducer.id,\r\n    rxUsername: userReducer.username,\r\n    rxCartLength: cartReducer.cart.length,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logoutAction, getCartByUserIdAction })(NavbarComp);\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\index.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\RegisterPage.jsx",["127","128","129","130","131","132"],"import React, { Component } from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\nimport { registerAciton } from '../redux/action';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { api_url } from '../favordb/api_url';\r\nimport Axios from 'axios';\r\n\r\nclass RegisterPage extends Component {\r\n  state = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    cpassword: '',\r\n  };\r\n\r\n  handleFormInput = (e) => {\r\n    // const { username, email, password, cpassword } = this.state;\r\n    // const emailValidation = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-\\.]{2,4}$/;\r\n    // const passwordValidation = /^(?=.*[\\d])(?=.*[`~!@#$%^&*\\-_])(?=.*[A-Z])[\\w]{8,16}$/;\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n    // email.match(emailValidation) ? console.log(true) : console.log(false);\r\n    // password.match(passwordValidation) ? console.log(true) : console.log(false);\r\n    // console.log(this.state);\r\n  };\r\n\r\n  handleRegisBtn = () => {\r\n    const emailValidation = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-\\.]{2,4}$/;\r\n    const passwordValidation = /^(?=.*[\\d])(?=.*[`~!@#$%^&*\\-_])(?=.*[A-Z])[\\w]{8,16}$/;\r\n    const { username, email, password, cpassword } = this.state;\r\n    if (username) {\r\n      if (email) {\r\n        if (password) {\r\n          if (cpassword) {\r\n            if (cpassword === password) {\r\n              if (email.match(emailValidation)) {\r\n                if (password.match(passwordValidation)) {\r\n                  Axios.get(`${api_url}/userdb?email=${email}`)\r\n                    .then((res) => {\r\n                      console.log('GET_userdb - SUCCESS');\r\n                      console.log(res.data[0]);\r\n                      if (!res.data[0]) {\r\n                        Axios.post(`${api_url}/userdb`, {\r\n                          username,\r\n                          email,\r\n                          password,\r\n                        })\r\n                          .then((res) => {\r\n                            console.log('POST_userdb - SUCCESS');\r\n                            return alert(`Welcome ${username}!^_^!`);\r\n                          })\r\n                          .catch((err) => console.log(err));\r\n                      } else {\r\n                        document.getElementById('email').value = '';\r\n                        return alert('email already in use');\r\n                      }\r\n                    })\r\n                    .catch((err) => {\r\n                      console.log(err);\r\n                    });\r\n                } else {\r\n                  return alert(\r\n                    'Password must contain at least one digit, one uppercase letter, one special character, and minimum of 8 characters and a maximum of 16 characters'\r\n                  );\r\n                }\r\n              } else {\r\n                return alert('Invalid email');\r\n              }\r\n            } else {\r\n              document.getElementById('password').value = '';\r\n              document.getElementById('cpassword').value = '';\r\n              return alert(\"Your password doesn't match\");\r\n            }\r\n          } else {\r\n            return alert('Please, retype your password!!');\r\n          }\r\n        } else {\r\n          return alert('Fill the password field!!');\r\n        }\r\n      } else {\r\n        return alert('Fill the email field!!');\r\n      }\r\n    } else {\r\n      return alert('Fill the username field!!');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: ' rgba(100, 202, 0, 0.8)',\r\n            width: '600px',\r\n            borderRadius: '25px',\r\n            boxShadow: '0px 5px 50px 5px rgba(255, 202, 0, 1)',\r\n          }}\r\n        >\r\n          <div\r\n            className=\"d-flex justify-content-center p-3 mt-2\"\r\n            style={{ borderBottom: '1px solid rgba(0,0,0,0.2)', color: 'black' }}\r\n          >\r\n            <h4>REGISTER</h4>\r\n          </div>\r\n          <div className=\"d-flex py-5\" style={{ flexDirection: 'column', padding: '0 100px' }}>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"text\"\r\n                placeholder=\"username\"\r\n                id=\"username\"\r\n              ></Input>\r\n            </div>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                id=\"email\"\r\n              ></Input>\r\n            </div>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                id=\"password\"\r\n              ></Input>\r\n            </div>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"password\"\r\n                placeholder=\"re-type password\"\r\n                id=\"cpassword\"\r\n              ></Input>\r\n            </div>\r\n            <div\r\n              style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n              className=\"my-2\"\r\n            >\r\n              <a href=\"#\">Have an account?</a>\r\n              <Button\r\n                style={{ borderRadius: '30px' }}\r\n                color=\"primary\"\r\n                className=\"px-3 py-2\"\r\n                onClick={this.handleRegisBtn}\r\n              >\r\n                Register\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n\r\n// }\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\index.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\userReducer.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\index.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\userAction.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\favordb\\api_url.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\ProductPage.jsx",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\LoginPage.jsx",["133"],"import React, { Component } from 'react';\r\nimport { Button, Input } from 'reactstrap';\r\nimport { registerLoginAction, getCartByUserIdAction } from '../redux/action';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { api_url } from '../favordb/api_url';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    formInputTemp: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n\r\n  handleFormInput = (e) => {\r\n    this.setState({\r\n      formInputTemp: {\r\n        ...this.state.formInputTemp,\r\n        [e.target.id]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleLoginBtn = () => {\r\n    const { email, password } = this.state.formInputTemp;\r\n    const { registerLoginAction, getCartByUserIdAction } = this.props;\r\n    Axios.get(`${api_url}/userdb?email=${email}&password=${password}`)\r\n      .then((res) => {\r\n        if (res.data[0]) {\r\n          // console.log(res.data[0]);\r\n          // console.log(localStorage);\r\n          console.log('GET_userLogin - SUCCESS');\r\n          registerLoginAction(res.data[0]);\r\n          localStorage.setItem('id', res.data[0].id);\r\n          getCartByUserIdAction(res.data[0].id);\r\n        } else {\r\n          return alert('The email address or password you entered is incorrect');\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { rxEmail } = this.props;\r\n    if (rxEmail) {\r\n      return <Redirect to=\"/product\" />;\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            backgroundColor: ' rgba(100, 202, 0, 0.8)',\r\n            width: '600px',\r\n            borderRadius: '25px',\r\n            boxShadow: '0px 5px 50px 5px rgba(255, 202, 0, 1)',\r\n          }}\r\n        >\r\n          <div\r\n            className=\"d-flex justify-content-center p-3 mt-2\"\r\n            style={{ borderBottom: '1px solid rgba(0,0,0,0.2)', color: 'black' }}\r\n          >\r\n            <h4>Login</h4>\r\n          </div>\r\n          <div className=\"d-flex py-5\" style={{ flexDirection: 'column', padding: '0 100px' }}>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                id=\"email\"\r\n              ></Input>\r\n            </div>\r\n            <div style={{ marginBottom: '25px' }}>\r\n              <Input\r\n                onChange={this.handleFormInput}\r\n                style={{ padding: '25px', borderRadius: '30px' }}\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                id=\"password\"\r\n              ></Input>\r\n            </div>\r\n            <div\r\n              style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n              className=\"my-2\"\r\n            >\r\n              <a href=\"#\">Haven't an account?</a>\r\n              <Button\r\n                style={{ borderRadius: '30px' }}\r\n                color=\"primary\"\r\n                className=\"px-3 py-2\"\r\n                onClick={this.handleLoginBtn}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ userReducer }) => {\r\n  return {\r\n    rxEmail: userReducer.email,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { registerLoginAction, getCartByUserIdAction })(LoginPage);\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ProductCard.jsx",["134","135","136"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n    '&:hover': {\r\n      boxShadow: '0px 5px 10px 5px rgba(0,0,0,0.3) ',\r\n    },\r\n  },\r\n});\r\n\r\nexport default function ProductCard(props) {\r\n  const classes = useStyles();\r\n  const { image, name, caption, price, stock } = props;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"320\"\r\n          image={image}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          {\r\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n              Rp{price.toLocaleString()}\r\n            </Typography>\r\n          }\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {caption}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      {/* <CardActions>\r\n        <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n          Buy\r\n        </Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\productAction.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\productReducer.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\spritedb\\index.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ModalProduct.jsx",["137"],"import { ProductCardComp } from './';\r\nimport React, { useState, Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { getCartByUserIdAction, addToCartAction } from '../redux/action';\r\n\r\n// class comp props\r\n\r\nclass ModalProductComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: props.image,\r\n      name: props.name,\r\n      price: props.price,\r\n      stock: props.stock,\r\n      caption: props.caption,\r\n      className: props.className,\r\n      modal: false,\r\n      qty: 1,\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    return this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n  qtyDec = () => {\r\n    let { qty } = this.state;\r\n    if (qty === 1) {\r\n      return qty;\r\n    } else {\r\n      this.setState({ qty: qty - 1 });\r\n      // console.log(qty);\r\n    }\r\n  };\r\n  qtyInc = () => {\r\n    let { qty, stock } = this.state;\r\n    if (qty === stock) {\r\n      return qty;\r\n    } else {\r\n      this.setState({ qty: qty + 1 });\r\n      // console.log(qty);\r\n    }\r\n  };\r\n  handleAddToCartBtn = () => {\r\n    const { image, name, price, qty, stock } = this.state;\r\n    const { rxUserId, rxEmail } = this.props; // reducer\r\n    const { addToCartAction, getCartByUserIdAction } = this.props; // action\r\n    const cart = {\r\n      userID: rxUserId,\r\n      name,\r\n      price,\r\n      qty,\r\n      stock,\r\n      image,\r\n    };\r\n    if (!rxEmail) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Not logged in',\r\n        text: 'Please login to continue!',\r\n      });\r\n    }\r\n    addToCartAction(cart, rxUserId);\r\n    getCartByUserIdAction(rxUserId);\r\n  };\r\n\r\n  render() {\r\n    const { className, image, name, price, stock, caption, modal, qty } = this.state;\r\n    return (\r\n      <div>\r\n        <div onClick={this.toggle}>\r\n          <ProductCardComp\r\n            image={image}\r\n            name={name}\r\n            price={price}\r\n            stock={stock}\r\n            caption={caption}\r\n          />\r\n        </div>\r\n        <Modal isOpen={modal} toggle={this.toggle} className={className}>\r\n          <ModalHeader toggle={this.toggle}>{name}</ModalHeader>\r\n          <ModalBody className=\"d-flex\">\r\n            <div>\r\n              <img\r\n                src={image}\r\n                alt=\"err_file\"\r\n                width=\"150\"\r\n                height=\"160\"\r\n                style={{ objectFit: 'cover' }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h5>Rp{price.toLocaleString()}</h5>\r\n              <div>Stock : {stock}</div>\r\n              <div className=\"my-3\">{caption}</div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <Button color=\"warning\" onClick={this.qtyDec} disabled={qty === 1}>\r\n                  -\r\n                </Button>\r\n                <div className=\"mx-2\">{qty}</div>\r\n                <Button color=\"warning\" onClick={this.qtyInc} disabled={qty === stock}>\r\n                  +\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Back\r\n            </Button>\r\n            <Button color=\"warning\" onClick={this.handleAddToCartBtn}>\r\n              Add to Cart\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ userReducer }) => {\r\n  return {\r\n    rxUserId: userReducer.id,\r\n    rxEmail: userReducer.email,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCartAction, getCartByUserIdAction })(\r\n  ModalProductComp\r\n);\r\n\r\n// const comp\r\n\r\n// const ModalProductComp = (props) => {\r\n//   const { buttonLabel, className, image, name, price, stock, caption } = props;\r\n\r\n//   const [modal, setModal] = useState(false);\r\n\r\n//   const toggle = () => setModal(!modal);\r\n//   let qty = 5;\r\n//   const qtyDec = () => {\r\n//     if (qty === 5) {\r\n//       return qty--;\r\n//     } else {\r\n//       return qty--;\r\n//     }\r\n//   };\r\n//   const qtyInc = () => {};\r\n\r\n//   return (\r\n//     <div>\r\n//       {/* <Button color=\"danger\" onClick={toggle}>\r\n//         {buttonLabel}\r\n//       </Button> */}\r\n//       <div onClick={toggle}>\r\n//         <ProductCardComp image={image} name={name} price={price} stock={stock} caption={caption} />\r\n//       </div>\r\n//       <Modal isOpen={modal} toggle={toggle} className={className}>\r\n//         <ModalHeader toggle={toggle}>{name}</ModalHeader>\r\n//         <ModalBody className=\"d-flex\">\r\n//           <div>\r\n//             <img\r\n//               src={image}\r\n//               alt=\"err_file\"\r\n//               width=\"150\"\r\n//               height=\"160\"\r\n//               style={{ objectFit: 'cover' }}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <h5>Rp{price.toLocaleString()}</h5>\r\n//             <div>Stock : {stock}</div>\r\n//             <div className=\"my-3\">{caption}</div>\r\n//             <div className=\"d-flex align-items-center\">\r\n//               <Button color=\"warning\" onClick={qtyDec}>\r\n//                 -\r\n//               </Button>\r\n//               <div className=\"mx-2\">{qty}</div>\r\n//               <Button color=\"warning\">+</Button>\r\n//             </div>\r\n//           </div>\r\n//         </ModalBody>\r\n//         <ModalFooter>\r\n//           <Button color=\"danger\" onClick={toggle}>\r\n//             Back\r\n//           </Button>\r\n//           <Button color=\"warning\" onClick={toggle}>\r\n//             Buy\r\n//           </Button>\r\n//         </ModalFooter>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// };\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\cartAction.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\cartReducer.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\BadgeShoppingCart.jsx",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\CartPage.jsx",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\HistoryTransactionPage.jsx",["138"],"import React, { Component } from 'react';\r\nimport { Table, Button } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { ModalHistoryComp } from '../componentdb';\r\n\r\nclass HistoryTransactionPage extends Component {\r\n  state = {};\r\n  renderTable = () => {\r\n    const { rxTransactionHistory } = this.props;\r\n    return rxTransactionHistory.map((value, index) => {\r\n      return (\r\n        <tr>\r\n          <th>{index + 1}</th>\r\n          <td>{value.date}</td>\r\n          <td>Rp{value.price.toLocaleString()}</td>\r\n          <td>\r\n            {/* <Button color=\"warning\" onClick={this.handleShowBtn}>\r\n              Show\r\n            </Button> */}\r\n            <ModalHistoryComp item={rxTransactionHistory[index]} />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  handleShowBtn = () => {};\r\n  render() {\r\n    return (\r\n      <div className=\"container my-5 py-5\">\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Date</th>\r\n              <th>Total Price</th>\r\n              <th>Items</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderTable()}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ historyReducer }) => {\r\n  return {\r\n    rxTransactionHistory: historyReducer.transactiondb,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryTransactionPage);\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\action\\historyAction.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\redux\\reducer\\historyReducer.js",[],"C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\componentdb\\ModalHistory.jsx",["139"],"import React, { useState, Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Table } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getTransactionHistoryByUserIDAction } from '../redux/action';\r\n\r\n// const ModalExample = (props) => {\r\n//   const { buttonLabel, className } = props;\r\n\r\n//   const [modal, setModal] = useState(false);\r\n\r\n//   const toggle = () => setModal(!modal);\r\n\r\n//   return (\r\n\r\n//   );\r\n// };\r\n\r\nclass ModalHistoryComp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      item: props.item,\r\n    };\r\n  }\r\n  // componentDidMount() {\r\n  //   const { getTransactionHistoryByUserIDAction } = this.props;\r\n  //   const { rxUserID } = this.props;\r\n  //   getTransactionHistoryByUserIDAction(rxUserID);\r\n  // }\r\n  toggle = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n  handleShowBtn = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n    // const { item } = this.state;\r\n    // console.log(item.cart[0]);\r\n  };\r\n  renderTable = () => {\r\n    const { item } = this.state;\r\n    return item.cart.map((value, index) => {\r\n      return (\r\n        <tr>\r\n          <th>{index + 1}</th>\r\n          <td>{value.name}</td>\r\n          <td>\r\n            <img\r\n              src={value.image}\r\n              alt=\"err_file\"\r\n              width=\"75\"\r\n              height=\"80\"\r\n              style={{ objectFit: 'cover' }}\r\n            />\r\n          </td>\r\n          <td>Rp{value.price.toLocaleString()}</td>\r\n          <td>{value.qty}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button color=\"warning\" onClick={this.handleShowBtn}>\r\n          Show\r\n        </Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}># Transaction History</ModalHeader>\r\n          <ModalBody>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Image</th>\r\n                  <th>Price</th>\r\n                  <th>Qty</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.renderTable()}</tbody>\r\n            </Table>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"danger\" onClick={this.toggle}>\r\n              Back\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ userReducer }) => {\r\n  return {\r\n    rxUserID: userReducer.id,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTransactionHistoryByUserIDAction })(ModalHistoryComp);\r\n","C:\\Users\\Strix\\Desktop\\remed\\latihan\\src\\pagedb\\ManageProductPage.jsx",["140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":20,"column":32,"nodeType":"147","messageId":"148","endLine":20,"endColumn":48},{"ruleId":"145","severity":1,"message":"150","line":102,"column":11,"nodeType":"147","messageId":"148","endLine":102,"endColumn":18},{"ruleId":"145","severity":1,"message":"151","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"145","severity":1,"message":"152","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":17},{"ruleId":"145","severity":1,"message":"153","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":31,"column":35,"nodeType":"156","messageId":"157","endLine":31,"endColumn":36,"suggestions":"158"},{"ruleId":"154","severity":1,"message":"155","line":31,"column":55,"nodeType":"156","messageId":"157","endLine":31,"endColumn":56,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":157,"column":15,"nodeType":"162","endLine":157,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":97,"column":15,"nodeType":"162","endLine":97,"endColumn":27},{"ruleId":"145","severity":1,"message":"163","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":19},{"ruleId":"145","severity":1,"message":"164","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":14},{"ruleId":"145","severity":1,"message":"165","line":22,"column":40,"nodeType":"147","messageId":"148","endLine":22,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":25},{"ruleId":"145","severity":1,"message":"164","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"166","line":154,"column":13,"nodeType":"147","messageId":"148","endLine":154,"endColumn":25},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'shoppingCartLogo' is defined but never used.","'classes' is assigned a value but never used.","'registerAciton' is defined but never used.","'connect' is defined but never used.","'Redirect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["169","170"],["171","172"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CardActions' is defined but never used.","'Button' is defined but never used.","'stock' is assigned a value but never used.","'dataSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"173","fix":"174","desc":"175"},{"messageId":"176","fix":"177","desc":"178"},{"messageId":"173","fix":"179","desc":"175"},{"messageId":"176","fix":"180","desc":"178"},"removeEscape",{"range":"181","text":"182"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"183","text":"184"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"185","text":"182"},{"range":"186","text":"184"},[1056,1057],"",[1056,1056],"\\",[1076,1077],[1076,1076]]